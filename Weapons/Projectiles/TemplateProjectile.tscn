[gd_scene load_steps=13 format=2]

[ext_resource path="res://HitBox.gd" type="Script" id=1]
[ext_resource path="res://Weapons/Projectiles/Projectile.gd" type="Script" id=2]
[ext_resource path="res://Weapons/Projectiles/ProjectileGlow.gd" type="Script" id=3]
[ext_resource path="res://v1.1 dungeon crawler 16x16 pixel pack/BulletEffects/lights1.png" type="Texture" id=4]
[ext_resource path="res://v1.1 dungeon crawler 16x16 pixel pack/effects (new)/hit_effect_anim_spritesheet.png" type="Texture" id=5]

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 6, 8 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 5 )
region = Rect2( 6, 0, 6, 8 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 5 )
region = Rect2( 12, 0, 6, 8 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 5 )
region = Rect2( 18, 0, 6, 8 )

[sub_resource type="SpriteFrames" id=3]
animations = [ {
"frames": [ SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ) ],
"loop": true,
"name": "Hit_effect",
"speed": 5.0
} ]

[sub_resource type="Animation" id=1]
length = 0.7
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "default" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Hitbox/Sprite:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Hitbox/Light2D:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Hitbox/CollisionShape2D:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/5/type = "method"
tracks/5/path = NodePath(".")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.7 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("AnimatedSprite:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=2]
resource_name = "Hit_anim"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("AnimatedSprite:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "Hit_effect" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/2/type = "method"
tracks/2/path = NodePath(".")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AnimatedSprite:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Hitbox/Sprite:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Hitbox/CollisionShape2D:disabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[node name="TemplateProjectile" type="Node2D"]
script = ExtResource( 2 )

[node name="Hitbox" type="Area2D" parent="."]
modulate = Color( 38.15, 13.95, 2.31, 1 )
collision_layer = 0
collision_mask = 4
script = ExtResource( 1 )
can_do_crit = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="Hitbox"]

[node name="Sprite" type="Sprite" parent="Hitbox"]
modulate = Color( 0.215686, 0.0941176, 0.564706, 1 )

[node name="Light2D" type="Light2D" parent="Hitbox"]
position = Vector2( 2, 0 )
texture = ExtResource( 4 )
texture_scale = 2.0
energy = 0.5
script = ExtResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
visible = false
frames = SubResource( 3 )
animation = "Hit_effect"

[node name="LifeTimer" type="Timer" parent="."]

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Explode = SubResource( 1 )
anims/Hit_anim = SubResource( 2 )

[node name="WallsDetector" type="Area2D" parent="."]
collision_layer = 0

[node name="CollisionShape2D" type="CollisionShape2D" parent="WallsDetector"]
[connection signal="body_entered" from="WallsDetector" to="." method="_on_WallsDetector_body_entered"]
